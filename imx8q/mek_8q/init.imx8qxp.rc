on init
    # change for cpu related
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq
    chmod 0440 /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq
    chown root system /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies
    chown root system /sys/devices/system/cpu/cpu2/online
    chmod 0664 /sys/devices/system/cpu/cpu2/online
    chown root system /sys/devices/system/cpu/cpu3/online
    chmod 0664 /sys/devices/system/cpu/cpu3/online

on early-boot
    # For mek_8qxp, when swap used about 400M, upgrade the level.
    setprop ro.lmk.upgrade_pressure 87
    setprop ro.lmk.downgrade_pressure 95
    setprop ro.lmk.critical_upgrade true

    # Set OpenGLES version
    setprop ro.opengles.version 196609

    # Set GPU 3D minimum clock to 3/64
    write /sys/bus/platform/drivers/galcore/gpu3DMinClock 3

    # Set NN reject model by weights md5
    setprop vendor.MODEL_BLOCK_LEVEL 1

    # Disable backpressure gpu composition
    setprop debug.sf.enable_gl_backpressure false

    # Set light sensor sysfs path
    setprop ro.hardware.lightsensor "/sys/class/i2c-dev/i2c-15/device/15-0044/"

on property:sys.boot_completed=1
    # Set default CPU frequency governor
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "schedutil"
    # The rate-limit tunable in the schedutil governor applies to transitions to both lower and higher frequencies
    # Set up and down limit to 200us/30ms
    write /sys/devices/system/cpu/cpufreq/schedutil/up_rate_limit_us 200
    write /sys/devices/system/cpu/cpufreq/schedutil/down_rate_limit_us 30000
    write /proc/sys/kernel/sched_util_clamp_min_rt_default 512
    chown mediacodec mediacodec /sys/class/remoteproc/remoteproc0/state
    chmod 0660 /sys/class/remoteproc/remoteproc0/state
    chown mediacodec mediacodec /sys/class/remoteproc/remoteproc0/name
    chmod 0660 /sys/class/remoteproc/remoteproc0/name
    chown mediacodec mediacodec /sys/class/remoteproc/remoteproc1/state
    chmod 0660 /sys/class/remoteproc/remoteproc1/state
    chown mediacodec mediacodec /sys/class/remoteproc/remoteproc1/name
    chmod 0660 /sys/class/remoteproc/remoteproc1/name

on property:sys.boot_completed=1
    # update cpuset now that processors are up
    write /dev/cpuset/foreground/cpus 0-2

    # top-app gets all cpus
    write /dev/cpuset/top-app/cpus 0-3

    #background contains a small subset (generally one little core)
    write /dev/cpuset/background/cpus 0

    # add system-background cpuset, a new cpuset for system services
    # that should not run on larger cores
    # system-background is for system tasks that should only run on
    # little cores, not on bigs to be used only by init
    write /dev/cpuset/system-background/cpus 0-2
